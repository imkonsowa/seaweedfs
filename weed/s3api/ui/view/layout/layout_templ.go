// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package layout

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"github.com/gin-gonic/gin"
	"github.com/seaweedfs/seaweedfs/weed/util/version"
	"strings"
	"time"
)

func Layout(c *gin.Context, content templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)

		username := c.GetString("username")
		if username == "" {
			username = "admin"
		}

		currentPath := c.Request.URL.Path
		isBucketPage := strings.HasPrefix(currentPath, "/ui/buckets")
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>SeaweedFS S3 Console</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link rel=\"icon\" href=\"/static/favicon.ico\" type=\"image/x-icon\"><!-- Bootstrap CSS --><link href=\"/static/css/bootstrap.min.css\" rel=\"stylesheet\"><!-- Font Awesome CSS --><link href=\"/static/css/fontawesome.min.css\" rel=\"stylesheet\"><!-- HTMX --><script src=\"/static/js/htmx.min.js\"></script><!-- Alpine.js --><script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script><!-- Custom CSS --><link rel=\"stylesheet\" href=\"/static/css/s3ui.css\"><style>\n        .navbar-brand img {\n            height: 32px;\n            width: 32px;\n        }\n        .sidebar {\n            min-height: calc(100vh - 56px);\n            box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);\n        }\n        .nav-link {\n            color: #333 !important;\n        }\n        .nav-link:hover {\n            background-color: #f8f9fa;\n        }\n        .nav-link.active {\n            background-color: #007bff;\n            color: white !important;\n        }\n        \n        /* Flat design - no shadows or hover effects for cards and tables */\n        .card {\n            box-shadow: none !important;\n            border: 1px solid #dee2e6;\n        }\n        .card:hover {\n            box-shadow: none !important;\n            transform: none !important;\n        }\n        .bucket-card {\n            transition: none !important;\n            box-shadow: none !important;\n            border: 1px solid #dee2e6;\n        }\n        .bucket-card:hover {\n            transform: none !important;\n            box-shadow: none !important;\n        }\n        .table:hover {\n            box-shadow: none !important;\n        }\n        .table-responsive:hover {\n            box-shadow: none !important;\n        }\n        \n        /* Sticky footer */\n        html, body {\n            height: 100%;\n        }\n        body {\n            display: flex;\n            flex-direction: column;\n        }\n        .container-fluid {\n            flex: 1 0 auto;\n        }\n        .footer {\n            flex-shrink: 0;\n            margin-top: auto !important;\n        }\n        \n        /* Fix dropdown z-index issues */\n        .dropdown-menu {\n            z-index: 1050 !important;\n        }\n        .table-responsive {\n            overflow: visible !important;\n        }\n        \n        /* Make table take full height - only for file browser */\n        .file-browser-card {\n            min-height: calc(100vh - 300px);\n            display: flex;\n            flex-direction: column;\n        }\n        .file-browser-card .card-body {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        .file-browser-card .table-responsive {\n            flex: 1;\n            min-height: 400px;\n        }\n    </style></head><body><!-- Header --><header class=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top px-3\"><a class=\"navbar-brand fw-bold\" href=\"/ui\"><i class=\"fas fa-cube me-2\"></i> SeaweedFS S3 Console</a> <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"><span class=\"navbar-toggler-icon\"></span></button><div class=\"collapse navbar-collapse\" id=\"navbarNav\"><ul class=\"navbar-nav ms-auto\"><li class=\"nav-item dropdown\"><a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\"><i class=\"fas fa-user me-1\"></i>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(username)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `weed/s3api/ui/view/layout/layout.templ`, Line: 138, Col: 50}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</a><ul class=\"dropdown-menu\"><li><a class=\"dropdown-item\" href=\"/admin\"><i class=\"fas fa-tachometer-alt me-2\"></i>Admin Dashboard</a></li><li><hr class=\"dropdown-divider\"></li><li><a class=\"dropdown-item\" href=\"/logout\"><i class=\"fas fa-sign-out-alt me-2\"></i>Logout</a></li></ul></li></ul></div></header><div class=\"container-fluid\"><div class=\"row g-0\"><!-- Sidebar --><div class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"><div class=\"position-sticky pt-3\"><h6 class=\"sidebar-heading px-3 mt-4 mb-1 text-muted\"><span>S3 STORAGE</span></h6><ul class=\"nav flex-column\"><li class=\"nav-item\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if currentPath == "/ui" || currentPath == "/ui/" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<a class=\"nav-link active\" href=\"/ui\"><i class=\"fas fa-home me-2\"></i>Overview</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<a class=\"nav-link\" href=\"/ui\"><i class=\"fas fa-home me-2\"></i>Overview</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</li><li class=\"nav-item\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if isBucketPage {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<a class=\"nav-link active\" href=\"/ui/buckets\"><i class=\"fas fa-cube me-2\"></i>Buckets</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<a class=\"nav-link\" href=\"/ui/buckets\"><i class=\"fas fa-cube me-2\"></i>Buckets</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</li></ul></div></div><!-- Main content --><main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\"><div class=\"pt-3\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div></main></div></div><!-- Notification Container --><div id=\"notification-container\" class=\"position-fixed top-0 end-0 p-3\" style=\"z-index: 1060;\"></div><!-- Footer --><footer class=\"footer mt-auto py-3 bg-light\"><div class=\"container-fluid text-center\"><small class=\"text-muted\">&copy; ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", time.Now().Year()))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `weed/s3api/ui/view/layout/layout.templ`, Line: 205, Col: 51}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, " SeaweedFS S3 Console v")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(version.VERSION_NUMBER)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `weed/s3api/ui/view/layout/layout.templ`, Line: 205, Col: 100}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " <span class=\"mx-2\">â€¢</span> <a href=\"https://seaweedfs.com\" target=\"_blank\" class=\"text-decoration-none\"><i class=\"fas fa-external-link-alt me-1\"></i>Documentation</a></small></div></footer><!-- Bootstrap JS --><script src=\"/static/js/bootstrap.bundle.min.js\"></script><!-- Global Error Handling and Notifications --><script>\n\t\t\t// Global notification system\n\t\t\twindow.showNotification = function(message, type = 'info', duration = 5000) {\n\t\t\t\tconsole.log('Showing notification:', message, type);\n\t\t\t\tconst container = document.getElementById('notification-container');\n\t\t\t\tconst alertId = 'alert-' + Date.now();\n\n\t\t\t\tconst alertTypes = {\n\t\t\t\t\t'success': 'alert-success',\n\t\t\t\t\t'error': 'alert-danger',\n\t\t\t\t\t'warning': 'alert-warning',\n\t\t\t\t\t'info': 'alert-info'\n\t\t\t\t};\n\n\t\t\t\tconst icons = {\n\t\t\t\t\t'success': 'fas fa-check-circle',\n\t\t\t\t\t'error': 'fas fa-exclamation-circle',\n\t\t\t\t\t'warning': 'fas fa-exclamation-triangle',\n\t\t\t\t\t'info': 'fas fa-info-circle'\n\t\t\t\t};\n\n\t\t\t\tconst alertHtml = `\n\t\t\t\t\t<div id=\"${alertId}\" class=\"alert ${alertTypes[type]} alert-dismissible fade show\" role=\"alert\" style=\"min-width: 300px;\">\n\t\t\t\t\t\t<i class=\"${icons[type]} me-2\"></i>\n\t\t\t\t\t\t${message}\n\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\n\t\t\t\tcontainer.insertAdjacentHTML('beforeend', alertHtml);\n\n\t\t\t\t// Auto-dismiss after duration\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst alert = document.getElementById(alertId);\n\t\t\t\t\tif (alert) {\n\t\t\t\t\t\tconst bsAlert = new bootstrap.Alert(alert);\n\t\t\t\t\t\tbsAlert.close();\n\t\t\t\t\t}\n\t\t\t\t}, duration);\n\t\t\t};\n\n\t\t\t// Global HTMX error and response handling\n\t\t\tdocument.body.addEventListener('htmx:responseError', function(evt) {\n\t\t\t\t// Skip bucket form - it has its own error handling\n\t\t\t\tif (evt.detail.elt && evt.detail.elt.id === 'createBucketForm') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log('HTMX Response Error:', evt.detail);\n\t\t\t\tlet errorMessage = 'An error occurred';\n\n\t\t\t\ttry {\n\t\t\t\t\tif (evt.detail.xhr.responseText) {\n\t\t\t\t\t\tconst response = JSON.parse(evt.detail.xhr.responseText);\n\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\terrorMessage = response.error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Error parsing response:', e);\n\t\t\t\t\terrorMessage = evt.detail.xhr.statusText || errorMessage;\n\t\t\t\t}\n\n\t\t\t\tshowNotification(errorMessage, 'error');\n\t\t\t});\n\n\t\t\t// Handle all HTMX requests (including errors)\n\t\t\tdocument.body.addEventListener('htmx:afterRequest', function(evt) {\n\t\t\t\t// Skip bucket form - it has its own error handling\n\t\t\t\tif (evt.detail.elt && evt.detail.elt.id === 'createBucketForm') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log('HTMX After Request:', evt.detail);\n\n\t\t\t\t// Handle errors (4xx, 5xx status codes)\n\t\t\t\tif (evt.detail.xhr.status >= 400) {\n\t\t\t\t\tlet errorMessage = 'An error occurred';\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (evt.detail.xhr.responseText) {\n\t\t\t\t\t\t\tconst response = JSON.parse(evt.detail.xhr.responseText);\n\t\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\t\terrorMessage = response.error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Error parsing error response:', e);\n\t\t\t\t\t\terrorMessage = evt.detail.xhr.statusText || `HTTP ${evt.detail.xhr.status} Error`;\n\t\t\t\t\t}\n\n\t\t\t\t\tshowNotification(errorMessage, 'error');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle successful operations\n\t\t\t\tif (evt.detail.xhr.status === 200 || evt.detail.xhr.status === 201) {\n\t\t\t\t\t// Show success message for bucket operations\n\t\t\t\t\tif (evt.detail.requestConfig && evt.detail.requestConfig.path && evt.detail.requestConfig.path.includes('/ui/api/buckets')) {\n\t\t\t\t\t\tif (evt.detail.requestConfig.verb === 'post') {\n\t\t\t\t\t\t\tshowNotification('Bucket created successfully!', 'success');\n\t\t\t\t\t\t} else if (evt.detail.requestConfig.verb === 'delete') {\n\t\t\t\t\t\t\tshowNotification('Bucket deleted successfully!', 'success');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
